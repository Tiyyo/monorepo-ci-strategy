name: Strategy Deploy

on:
  push:
    branches:
      - target
      - main

jobs:
  determine-affected:
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.set-affected.outputs.affected }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug changed files
        run: |
          echo "Changed files:"
          git diff --name-only origin/main HEAD | cat
          echo "Current branch: ${{ github.ref_name }}"
          echo "Base branch: origin/main"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: |
          npm install -g pnpm
          echo "PNPM_HOME=$(npm config get prefix)/bin" >> $GITHUB_ENV
          echo "$(npm config get prefix)/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile
          pnpm add turbo@latest -w --save-dev

      - name: Debug workspace
        run: |
          echo "Workspace packages:"
          pnpm ls -r | cat
          echo "Turbo version:"
          pnpm turbo --version
          echo "Workspace root:"
          pnpm turbo info | cat
          echo "Package.json contents:"
          cat package.json | cat

      - name: Determine affected apps
        id: set-affected
        run: |
          # Get the base commit
          BASE_SHA=$(git merge-base origin/main HEAD)
          echo "Base SHA: $BASE_SHA"

          # Get changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Get affected apps list
          AFFECTED_APPS=$(pnpm turbo run build --filter="...[origin/main]..." --dry-run=json | jq -r '.tasks[].package' | grep "^apps/" | sort | uniq | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "affected=$AFFECTED_APPS" >> $GITHUB_OUTPUT
          echo "Affected apps: $AFFECTED_APPS"

  deploy-app-1:
    needs: determine-affected
    if: contains(fromJson(needs.determine-affected.outputs.affected), 'apps/app-1')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install pnpm
        run: |
          npm install -g pnpm
          echo "PNPM_HOME=$(npm config get prefix)/bin" >> $GITHUB_ENV
          echo "$(npm config get prefix)/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Deploy App 1
        run: |
          echo "Deploying App 1"
          # Add specific deployment commands here

  deploy-app-2:
    needs: determine-affected
    if: contains(fromJson(needs.determine-affected.outputs.affected), 'apps/app-2')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install pnpm
        run: |
          npm install -g pnpm
          echo "PNPM_HOME=$(npm config get prefix)/bin" >> $GITHUB_ENV
          echo "$(npm config get prefix)/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Deploy App 2
        run: |
          echo "Deploying App 2"
          # Add specific deployment commands here

  deploy-app-3:
    needs: determine-affected
    if: contains(fromJson(needs.determine-affected.outputs.affected), 'apps/app-3')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install pnpm
        run: |
          npm install -g pnpm
          echo "PNPM_HOME=$(npm config get prefix)/bin" >> $GITHUB_ENV
          echo "$(npm config get prefix)/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Deploy App 3
        run: |
          echo "Deploying App 3"
          # Add specific deployment commands here
